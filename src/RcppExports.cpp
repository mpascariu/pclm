// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppEigen.h>
#include <Rcpp.h>

using namespace Rcpp;

// asSparseMat
SEXP asSparseMat(SEXP inX);
RcppExport SEXP _ungroup_asSparseMat(SEXP inXSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type inX(inXSEXP);
    rcpp_result_gen = Rcpp::wrap(asSparseMat(inX));
    return rcpp_result_gen;
END_RCPP
}
// SparseProd
SEXP SparseProd(SEXP inX, SEXP inY);
RcppExport SEXP _ungroup_SparseProd(SEXP inXSEXP, SEXP inYSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type inX(inXSEXP);
    Rcpp::traits::input_parameter< SEXP >::type inY(inYSEXP);
    rcpp_result_gen = Rcpp::wrap(SparseProd(inX, inY));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_ungroup_asSparseMat", (DL_FUNC) &_ungroup_asSparseMat, 1},
    {"_ungroup_SparseProd", (DL_FUNC) &_ungroup_SparseProd, 2},
    {NULL, NULL, 0}
};

RcppExport void R_init_ungroup(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
